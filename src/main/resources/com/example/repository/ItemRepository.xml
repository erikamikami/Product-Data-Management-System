<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.repository.ItemRepository">

<select id="countAllItems" resultType="int">
  SELECT count(*) FROM items;
</select>

<select id="findAll" resultType="com.example.entity.Item" parameterType="com.example.pagination.Pagination">
  SELECT id, name, condition, category, brand_name, price, shipping, item_description
  FROM items
  ORDER BY id ASC
  LIMIT #{displaysPerPage} OFFSET #{displaysPerPage}*(#{page}-1)
</select>

<select id="findById" resultType="com.example.entity.Item" parameterType="int">
  SELECT id, name, condition, category, brand_name, price, shipping, item_description
  FROM items
  WHERE id = #{id}
</select>

<select id="findMaxId" resultType="int">
  SELECT max(id) FROM items;
</select>

<insert id="insert" parameterType="com.example.entity.Item">
  INSERT INTO items (id, name, condition, category, brand_name, price, shipping, item_description)
  VALUES (#{id}, #{name}, #{condition}, #{category}, #{brandName}, #{price}, #{shipping}, #{itemDescription})
</insert>

<update id="update" parameterType="com.example.entity.Item">
  UPDATE items SET 
  name = #{name}
  ,condition = #{condition}
  ,category = #{category}
  ,brand_name = #{brandName}
  ,price = #{price}
  ,shipping = #{shipping}
  ,item_description = #{itemDescription}
  WHERE id = #{id}
</update>

<select id="search" resultType="com.example.entity.Item">
  SELECT id, name, condition, category, brand_name, price, shipping, item_description
  FROM items
  WHERE 1 = 1
  
  <choose>
    <when test="itemSearchForm.parentCategory != null and itemSearchForm.childCategory != null and itemSearchForm.grandChild != null "> <!-- 親・子・孫 -->
      AND category = #{itemSearchForm.parentCategory} || '/' || #{itemSearchForm.childCategory} || '/' || #{itemSearchForm.grandChild}
    </when>
    <when test="itemSearchForm.parentCategory != null and itemSearchForm.childCategory != null and itemSearchForm.grandChild == null"> <!-- 親・子 -->
      AND category LIKE '%' || #{itemSearchForm.parentCategory} || '/' || #{itemSearchForm.childCategory}
    </when>
    <when test="itemSearchForm.parentCategory != null and itemSearchForm.childCategory == null and itemSearchForm.grandChild != null"> <!-- 親・孫 -->
      AND category LIKE #{itemSearchForm.parentCategory} || '%'
      AND category LIKE '%' || #{itemSearchForm.grandChild} 
    </when>
    <when test="itemSearchForm.parentCategory == null and itemSearchForm.childCategory != null and itemSearchForm.grandChild != null"> <!-- 子・孫 -->
      AND category LIKE '%' || #{itemSearchForm.childCategory} || '/' || #{itemSearchForm.grandChild}
    </when>
    <when test="itemSearchForm.parentCategory != null and itemSearchForm.childCategory == null and itemSearchForm.grandChild == null "> <!-- 親 -->
      AND category LIKE #{itemSearchForm.parentCategory} || '%'
    </when>
    <when test="itemSearchForm.parentCategory == null and itemSearchForm.childCategory != null and itemSearchForm.grandChild == null "> <!-- 子 -->
      AND category LIKE '%' || '/' || #{itemSearchForm.childCategory} || '/' || '%'
    </when>
    <when test="itemSearchForm.parentCategory == null and itemSearchForm.childCategory == null and itemSearchForm.grandChild != null "> <!-- 孫 -->
      AND category LIKE '%' || #{itemSearchForm.grandChild}
    </when>
    <otherwise>
      AND 1 = 1
    </otherwise>
  </choose>
  
  <if test="itemSearchForm.name != null">
    AND name LIKE '%' || #{itemSearchForm.name} || '%'
  </if>
  
  <if test="itemSearchForm.brandName != null">
    AND brand_name LIKE '%' || #{itemSearchForm.brandName} || '%'
  </if>
  
  ORDER BY id ASC
  LIMIT #{pagination.displaysPerPage} OFFSET #{pagination.displaysPerPage}*(#{pagination.page}-1)
</select>

</mapper>
